#!/system/bin/sh

cat << CTAG
{
    name:KERNEL TWEAKS,
    elements:[
      { SPane:{
		title:"Low Memory Killer",
		description:"LMK Minfree controls how much memory each app type can hold, and is responsible for memory management for multitasking; all values are multiplied by 256 pages."
      }},
`
	for LMK in 1 2 3 4 5 6; do
		echo '{ SSeekBar:{ '
			case $LMK in
			1)
				echo 'title:"Foreground App"' ;;
			2)
				echo 'title:"Visible App"' ;;
			3)
				echo 'title:"Secondary Server"' ;;
			4)
				echo 'title:"Hidden App"' ;;
			5)
				echo 'title:"Content Provider"' ;;
			6)
				echo 'title:"Empty App"' ;;
			esac
			echo ', action:"minfree '${LMK}'",
			min:10, max:200 }},'
	done
`
    { SPane:{
		title:"Kernel Entropy"
    }},
	{ SLiveLabel:{
		title:"Entropy Available",
		refresh:1000,
		action:"show entropy"
	}},
	{ SSeekBar:{
		title:"Read Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/read_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/read_wakeup_threshold"
	}},
	{ SSeekBar:{
		title:"Write Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/write_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/write_wakeup_threshold"
	}},
	{ SPane:{
		title:"Change SELinux Status",
	}},
	{ SDescription:{
		description:"In Enforced mode SELinux is the most secure. It will block or deny any form of violation that the kernel detects and by default.",
	}},
	{ SDescription:{
		description:"In permissive mode means that SELinux is enabled, but it is not actively blocking any violations.",
	}},
	{ SDescription:{
		description:" "
	}},
	{ SOptionList:{
		default:`getenforce`,
		action:"devtools selinux",
		values:[ Enforcing, Permissive],
	}},
    ]
}
CTAG
